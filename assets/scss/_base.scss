html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

/// https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
*,
*:before,
*:after {
  box-sizing: inherit;
}

html,
body {
  min-height: 100vh;
}

body {
  display: flex;
  flex-direction: column;
  overflow: hidden;

  background-color: $bg-dark-purple;
  margin: 0;
}

.container {
  @include flex-content;

  text-align: center;
}

.content {
  @include flex-content;

  align-items: center;
}

.main-logo {
  width: 80vw;
}

// #uuid-842ac5e4-1d27-41d9-9b11-f252f6efdad9 g path:nth-child(1) {
//   animation: 28s ease-in-out 0s infinite spin;
// }

// #uuid-842ac5e4-1d27-41d9-9b11-f252f6efdad9 g path:nth-child(2) {
//   animation: 24s linear 0s infinite reverse spin;
// }

// @keyframes spin {
//   from {
//     transform: rotate(0deg);
//     transform-origin: 50% 10%;
//     transform-box: fill-box;
//   }
//   to {
//     transform: rotate(360deg);
//     transform-origin: 0% 0%;
//     transform-box: fill-box;
//   }
// }

$num-paths-in-logo-pattern: 27;

@for $i from 1 through $num-paths-in-logo-pattern {
  $rand-timing-func: random(2) == 1;
  $reverse-direction: random(2) == 1;
  #uuid-842ac5e4-1d27-41d9-9b11-f252f6efdad9 :nth-child(#{$i}) {
    opacity: 0.85;
    animation: spin#{$i} random(40) + 20s infinite;
    @if $rand-timing-func {
      animation-timing-function: linear;
    } @else {
      animation-timing-function: ease-in-out;
    }
    @if $reverse-direction {
      animation-direction: reverse;
    }
  }

  @keyframes spin#{$i} {
    from {
      transform: rotate(0deg);
      transform-origin: 50% 10%;
      transform-box: fill-box;
    }
    to {
      transform: rotate(360deg);
      transform-origin: 0% 0%;
      transform-box: fill-box;
    }
  }
}
